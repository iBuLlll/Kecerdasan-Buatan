# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-k9JRIdaBr0ybHAy_G4rrIv6zr6JI7u5
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

df = pd.read_csv('/content/data.csv')

df.head()

df.drop(['Unnamed: 32', 'id'], axis=1, inplace=True)

df['diagnosis']

plt.figure(figsize=(5,5))
sns.countplot(data=df, x='diagnosis')

df['diagnosis'].replace({"M":1,"B":0},inplace=True)

df.shape

df.describe()

df.columns

to_drop = ['perimeter_mean','radius_mean','compactness_mean','concave points_mean','radius_se','perimeter_se','radius_worst','perimeter_worst','compactness_worst','concave points_worst','compactness_se','concave points_se','texture_worst','area_worst']
df.drop(to_drop, axis=1, inplace=True)

sns.pairplot(data=df, hue='diagnosis')

plt.figure(figsize=(20,20))
sns.heatmap(df.corr(), annot=True)

X=df.drop('diagnosis', axis=1)
y=df['diagnosis']

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)

import warnings
warnings.filterwarnings("ignore")

from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import GridSearchCV
clf=LogisticRegression()
parameters = {'C':[1, 10, 20, 30, 40, 50, 70, 100, 200, 300],
              'penalty':['l1','l2','elasticnet'], 'max_iter':[100,200,300]}
clf_reg = GridSearchCV(clf, param_grid=parameters, scoring='accuracy', cv=5,)

clf_reg.fit(X_train,y_train)

print(clf_reg.best_params_)

print(clf_reg.best_score_)

y_pred=clf_reg.predict(X_test)

from sklearn.metrics import accuracy_score, classification_report

accuracy=accuracy_score(y_pred, y_test)
accuracy

print(classification_report(y_pred, y_test))